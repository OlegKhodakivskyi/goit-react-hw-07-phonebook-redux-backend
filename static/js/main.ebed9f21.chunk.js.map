{"version":3,"sources":["Components/Alert/Alert.module.css","Components/App.module.css","Components/Contacts/ContactFormList/ContactList.module.css","Components/Contacts/ContactFormList/ContactFormListItem/ContactFormListItem.module.css","redux/phoneBookActions/phoneBookActionTypes.js","redux/phoneBookActions/phoneBookActions.js","redux/phoneBookActions/phoneBookOperations.js","redux/phoneBookActions/phoneBookSelectors.js","Components/Contacts/ContactForm.jsx","Components/Contacts/ContactFormList/ContactFormListItem/ContactFormListItem.jsx","Components/Contacts/ContactFormList/ContactFormList.jsx","Components/Filter/Filter.jsx","Components/Alert/Alert.jsx","Components/App.js","redux/phoneBookActions/phoneBookReducers.js","redux/store.js","index.js"],"names":["module","exports","filter","type","phoneBookActionsTypes","payload","duplicate","addContactRequest","addContactSuccess","contacts","addContactError","error","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactError","removeContactSuccess","id","removeContactRequest","baseURL","onAddContact","dispatch","phoneBookActions","axios","post","then","response","data","catch","fetchContacts","get","onRemoveContacts","delete","getFilter","state","getContacts","items","getLoading","loading","getAlert","alertSwitch","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","duplicateFn","props","onAlert","setTimeout","some","this","onSubmit","htmlFor","onChange","Component","mapDispatchToProps","phoneBookOperations","connect","phoneBookSelectors","ContactFormListItem","onRemove","key","className","css","contactListItem","onClick","TransitionGroup","component","styles","contactList","map","CSSTransition","timeout","classNames","unmountOnExit","onChangeFilter","Alert","alertWrapper","App","onFetchContacts","alert","stylesAlert","in","appear","sectionTitle","contactListTitle","combineReducers","console","log","rootReducer","phoneBookReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebed9f21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Alert_appear__3wcmi\",\"appearActive\":\"Alert_appearActive__3QDpf\",\"alertWrapper\":\"Alert_alertWrapper__ZX0YE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__1heH2\",\"contactListTitle\":\"App_contactListTitle__3ZIKD\",\"appear\":\"App_appear__1pUky\",\"appearActive\":\"App_appearActive__VtLob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2vDzu\",\"enter\":\"ContactList_enter__1BXRf\",\"enterActive\":\"ContactList_enterActive__3ufy0\",\"exit\":\"ContactList_exit__FK9AI\",\"exitActive\":\"ContactList_exitActive__1HDV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactFormListItem_contactListItem__2nAvv\"};","const ADD = \"contacts/add\";\r\nconst DEL = \"contacts/del\";\r\nconst FILTER = \"contacts/filter\";\r\nconst DUPLICATE = \"contacts/duplicate\";\r\n\r\nconst ADD_CONTACT_REQUEST = \"contacts/addContactRequest\";\r\nconst ADD_CONTACT_SUCCESS = \"contacts/addContactSuccess\";\r\nconst ADD_CONTACT_ERROR = \"contacts/addContactError\";\r\n\r\nconst DEL_CONTACT_REQUEST = \"contact/removeContactRequest\";\r\nconst DEL_CONTACT_SUCCESS = \"contact/removeContactSuccess\";\r\nconst DEL_CONTACT_ERROR = \"contact/removeContactError\";\r\n\r\nconst FETCH_CONTACT_REQUEST = \"contacts/fetchContactsRequest\";\r\nconst FETCH_CONTACT_SUCCESS = \"contacts/fetchContactsSuccess\";\r\nconst FETCH_CONTACT_ERROR = \"contacts/fetchContactsError\";\r\n\r\nexport default {\r\n  ADD,\r\n  DEL,\r\n  FILTER,\r\n  DUPLICATE,\r\n\r\n  ADD_CONTACT_REQUEST,\r\n  ADD_CONTACT_SUCCESS,\r\n  ADD_CONTACT_ERROR,\r\n\r\n  DEL_CONTACT_REQUEST,\r\n  DEL_CONTACT_SUCCESS,\r\n  DEL_CONTACT_ERROR,\r\n\r\n  FETCH_CONTACT_REQUEST,\r\n  FETCH_CONTACT_SUCCESS,\r\n  FETCH_CONTACT_ERROR,\r\n};\r\n","import phoneBookActionsTypes from \"./phoneBookActionTypes\";\r\n\r\n// const addContact = (contacts) => ({\r\n//   type: phoneBookActionsTypes.ADD,\r\n//   payload: {\r\n//     contacts,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = (id) => ({\r\n//   type: phoneBookActionsTypes.DEL,\r\n//   payload: {\r\n//     id,\r\n//   },\r\n// });\r\n\r\nconst filter = (filter) => {\r\n  // console.log(filter);\r\n  return {\r\n    type: phoneBookActionsTypes.FILTER,\r\n    payload: {\r\n      filter,\r\n    },\r\n  };\r\n};\r\n\r\nconst duplicate = () => ({\r\n  type: phoneBookActionsTypes.DUPLICATE,\r\n});\r\n\r\nconst addContactRequest = () => {\r\n  return {\r\n    type: phoneBookActionsTypes.ADD_CONTACT_REQUEST,\r\n  };\r\n};\r\n\r\nconst addContactSuccess = (contacts) => {\r\n  // console.log(contacts);\r\n  return {\r\n    type: phoneBookActionsTypes.ADD_CONTACT_SUCCESS,\r\n    payload: {\r\n      ...contacts,\r\n    },\r\n  };\r\n};\r\n\r\nconst addContactError = (error) => {\r\n  return {\r\n    type: phoneBookActionsTypes.ADD_CONTACT_ERROR,\r\n    payload: { error },\r\n  };\r\n};\r\n\r\nconst fetchContactRequest = () => {\r\n  return {\r\n    type: phoneBookActionsTypes.FETCH_CONTACT_REQUEST,\r\n  };\r\n};\r\n\r\nconst fetchContactSuccess = (contacts) => {\r\n  return {\r\n    type: phoneBookActionsTypes.FETCH_CONTACT_SUCCESS,\r\n    payload: contacts,\r\n  };\r\n};\r\n\r\nconst fetchContactError = (error) => {\r\n  return {\r\n    type: phoneBookActionsTypes.FETCH_CONTACT_ERROR,\r\n    payload: { error },\r\n  };\r\n};\r\n\r\nconst removeContactRequest = () => {\r\n  return {\r\n    type: phoneBookActionsTypes.DEL_CONTACT_REQUEST,\r\n  };\r\n};\r\n\r\nconst removeContactSuccess = (id) => {\r\n  // console.log(id);\r\n  return {\r\n    type: phoneBookActionsTypes.DEL_CONTACT_SUCCESS,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nconst removeContactError = (error) => {\r\n  return {\r\n    type: phoneBookActionsTypes.DEL_CONTACT_ERROR,\r\n    payload: { error },\r\n  };\r\n};\r\n\r\nexport default {\r\n  // addContact,\r\n  // deleteContact,\r\n  filter,\r\n  duplicate,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n\r\n  removeContactError,\r\n  removeContactSuccess,\r\n  removeContactRequest,\r\n};\r\n","import axios from \"axios\";\r\nimport phoneBookActions from \"./phoneBookActions\";\r\n\r\nconst baseURL = `http://localhost:2000/`;\r\n\r\nconst onAddContact = (contacts) => (dispatch) => {\r\n  dispatch(phoneBookActions.addContactRequest());\r\n  axios\r\n    .post(`${baseURL}contacts`, contacts)\r\n    .then((response) => {\r\n      // console.log(response.data.contacts);\r\n      dispatch(phoneBookActions.addContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(phoneBookActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(phoneBookActions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(`${baseURL}contacts`)\r\n    .then(({ data }) => {\r\n      dispatch(phoneBookActions.fetchContactSuccess(data));\r\n    })\r\n    .catch((error) => {\r\n      dispatch(phoneBookActions.fetchContactError(error));\r\n    });\r\n};\r\n\r\nconst onRemoveContacts = (id) => (dispatch) => {\r\n  dispatch(phoneBookActions.removeContactRequest());\r\n  axios\r\n    .delete(`${baseURL}contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(phoneBookActions.removeContactSuccess(id));\r\n    })\r\n    .catch((error) => {\r\n      dispatch(phoneBookActions.removeContactError(error));\r\n    });\r\n};\r\n\r\nexport default { onAddContact, fetchContacts, onRemoveContacts };\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getAlert = (state) => state.contacts.alertSwitch;\r\n\r\nconst getContacts = (state) => {\r\n  return state.contacts.items;\r\n};\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      // contact.name &&\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getAlert,\r\n  getFilteredContacts,\r\n  getContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookOperations from \"../../redux/phoneBookActions/phoneBookOperations\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions/phoneBookActions\";\r\nimport phoneBookSelectors from \"../../redux/phoneBookActions/phoneBookSelectors\";\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.duplicateFn()) {\r\n      this.props.onAlert();\r\n      setTimeout(() => {\r\n        this.props.onAlert();\r\n      }, 1500);\r\n    } else {\r\n      this.props.onAddContact({ ...this.state });\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n\r\n  duplicateFn = () => {\r\n    return this.props.contacts.some(\r\n      (contacts) =>\r\n        contacts.name.toLowerCase() === this.state.name.toLowerCase()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"Name\">\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number:\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\"> Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state, \"stateFOrm\");\r\n\r\n  return {\r\n    contacts: phoneBookSelectors.getContacts(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: phoneBookOperations.onAddContact,\r\n  onAlert: phoneBookActions.duplicate,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  number: PropTypes.number,\r\n  name: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport css from \"./ContactFormListItem.module.css\";\r\n\r\nconst ContactFormListItem = ({ id, name, number, onRemove }) => (\r\n  <>\r\n    <li key={id} className={css.contactListItem}>\r\n      <p> {name} : </p>\r\n      <p> {number} </p>\r\n      <button type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  </>\r\n);\r\n\r\nexport default ContactFormListItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookOperations from \"../../../redux/phoneBookActions/phoneBookOperations\";\r\nimport ContactFormListItem from \"./ContactFormListItem/ContactFormListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport phoneBookSelectors from \"../../../redux/phoneBookActions/phoneBookSelectors\";\r\n\r\nconst ContactFormList = ({ contacts, onRemoveContacts }) => (\r\n  <>\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition\r\n          key={id}\r\n          timeout={1000}\r\n          classNames={styles}\r\n          unmountOnExit\r\n        >\r\n          <ContactFormListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onRemove={() => onRemoveContacts(id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state, \"stateList\");\r\n  return {\r\n    items: phoneBookSelectors.getContacts(state),\r\n    contacts: phoneBookSelectors.getFilteredContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContacts: phoneBookOperations.onRemoveContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFormList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions/phoneBookActions\";\r\nimport phoneBookSelectors from \"../../redux/phoneBookActions/phoneBookSelectors\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <label>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => {\r\n          // console.log(e.target.value);\r\n          onChangeFilter(e.target.value);\r\n        }}\r\n      />\r\n    </label>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: phoneBookSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: phoneBookActions.filter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = () => {\r\n  return (\r\n    <div className={styles.alertWrapper}>\r\n      <p>Contact already exist !</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookOperations from \"../redux/phoneBookActions/phoneBookOperations\";\r\nimport ContactForm from \"./Contacts/ContactForm\";\r\nimport ContactFormList from \"./Contacts/ContactFormList/ContactFormList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport phoneBookSelectors from \"../redux/phoneBookActions/phoneBookSelectors\";\r\nimport styles from \"./App.module.css\";\r\nimport stylesAlert from \"./Alert/Alert.module.css\";\r\nimport Alert from \"./Alert/Alert\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n  render() {\r\n    const { alert, loading } = this.props;\r\n    return (\r\n      <>\r\n        {loading && <h2>LOADING ...</h2>}\r\n        {/* ----------- ALert ----- */}\r\n        {alert && (\r\n          <CSSTransition\r\n            classNames={stylesAlert}\r\n            in={true}\r\n            appear={true}\r\n            timeout={1500}\r\n            unmountOnExit\r\n          >\r\n            <Alert alert={alert} />\r\n          </CSSTransition>\r\n        )}\r\n\r\n        {/* ----------- Phonebook ----- */}\r\n\r\n        <CSSTransition\r\n          classNames={styles}\r\n          in={true}\r\n          appear={true}\r\n          timeout={1500}\r\n          unmountOnExit\r\n        >\r\n          <h1 className={styles.sectionTitle}>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        {/* ----------- Contact FORM ----- */}\r\n\r\n        <ContactForm />\r\n        <h2 className={styles.contactListTitle}>Contacts</h2>\r\n        <Filter />\r\n        <ContactFormList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state.contacts.alertSwitch);\r\n  return {\r\n    alert: phoneBookSelectors.getAlert(state),\r\n    loading: phoneBookSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: phoneBookOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBookActionsTypes from \"./phoneBookActionTypes\";\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  // console.log(payload);\r\n  switch (type) {\r\n    case phoneBookActionsTypes.ADD_CONTACT_SUCCESS:\r\n      return [...state, payload];\r\n\r\n    case phoneBookActionsTypes.FETCH_CONTACT_SUCCESS:\r\n      return payload;\r\n\r\n    case phoneBookActionsTypes.DEL_CONTACT_SUCCESS:\r\n      console.log(state);\r\n      // console.log(items);\r\n      return state.filter((contacts) => contacts.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case phoneBookActionsTypes.FILTER:\r\n      // console.log(\"filter\");\r\n      return payload.filter;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst alertSwitch = (state = false, { type, payload }) => {\r\n  switch (type) {\r\n    case phoneBookActionsTypes.DUPLICATE:\r\n      return !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loading = (state = false, { type, payload }) => {\r\n  switch (type) {\r\n    case phoneBookActionsTypes.ADD_CONTACT_REQUEST:\r\n    case phoneBookActionsTypes.FETCH_CONTACT_REQUEST:\r\n    case phoneBookActionsTypes.DEL_CONTACT_REQUEST:\r\n      return true;\r\n\r\n    case phoneBookActionsTypes.ADD_CONTACT_SUCCESS:\r\n    case phoneBookActionsTypes.ADD_CONTACT_ERROR:\r\n    case phoneBookActionsTypes.FETCH_CONTACT_SUCCESS:\r\n    case phoneBookActionsTypes.FETCH_CONTACT_ERROR:\r\n    case phoneBookActionsTypes.DEL_CONTACT_SUCCESS:\r\n    case phoneBookActionsTypes.DEL_CONTACT_ERROR:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst error = (state = null, { type, payload }) => {\r\n  switch (type) {\r\n    case phoneBookActionsTypes.ADD_CONTACT_ERROR:\r\n    case phoneBookActionsTypes.FETCH_CONTACT_ERROR:\r\n    case phoneBookActionsTypes.DEL_CONTACT_ERROR:\r\n      return payload;\r\n\r\n    case phoneBookActionsTypes.ADD_CONTACT_REQUEST:\r\n    case phoneBookActionsTypes.FETCH_CONTACT_REQUEST:\r\n    case phoneBookActionsTypes.DEL_CONTACT_REQUEST:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter, alertSwitch, loading, error });\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport phoneBookReducers from \"./phoneBookActions/phoneBookReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneBookReducers,\r\n});\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}